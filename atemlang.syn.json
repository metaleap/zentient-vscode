{
	"scopeName": "source.atem",
	"name": "atem",
	"comment": "atem language",
	"fileTypes": [
		"at"
	],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#defs"
		},
		{
			"include": "#brackets"
		},
		{
			"include": "#delimiters"
		},
		{
			"include": "#keyops"
		},
		{
			"include": "#opishs"
		},
		{
			"include": "#stdlib"
		},
		{
			"include": "#runes"
		},
		{
			"include": "#numlits"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#vars"
		},
		{
			"include": "#tags"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.atem",
					"begin": "//",
					"end": "$"
				},
				{
					"name": "comment.block.atem",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"brackets": {
			"patterns": [
				{
					"name": "punctuation.definition.bracket.round.atem",
					"match": "\\(|\\)"
				},
				{
					"name": "punctuation.definition.bracket.curly.atem",
					"match": "{|}"
				},
				{
					"name": "punctuation.definition.bracket.square.atem",
					"match": "\\[|\\]"
				}
			]
		},
		"delimiters": {
			"patterns": [
				{
					"name": "punctuation.other.ampersand.atem",
					"match": "\\s&{1}\\s"
				},
				{
					"name": "punctuation.other.comma.atem",
					"match": ","
				},
				{
					"name": "punctuation.other.period.atem",
					"match": "(\\b|\\s)\\.(\\b|\\s)"
				},
				{
					"name": "punctuation.other.colon.atem",
					"match": ":(?!=)"
				}
			]
		},
		"keyops": {
			"patterns": [
				{
					"name": "keyword.control.atem",
					"match": "\\s(\\?|:=|\\|)\\s"
				}
			]
		},
		"opishs": {
			"patterns": [
				{
					"name": "keyword.operator.atem",
					"match": "[\\p{S}\\p{P}&&[^(),;\\[\\]`{}_\"']]+"
				}
			]
		},
		"stdlib": {
			"patterns": [
				{
					"name": "support.function.atem",
					"match": "\\b(if|must|not|self|only)\\b"
				},
				{
					"name": "support.type.atem",
					"match": "\\b(bool)\\b"
				},
				{
					"name": "support.constant.atem",
					"match": "\\b(True|False|true|false)\\b"
				}
			]
		},
		"runes": {
			"patterns": [
				{
					"name": "string.quoted.rune.atem",
					"begin": "'",
					"end": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.atem"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.atem"
						}
					},
					"patterns": [
						{
							"name": "constant.other.rune.atem",
							"match": "\\G(\\\\([0-7]{3}|[abfnrtv\\\\'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})|.)(?=')"
						},
						{
							"name": "invalid.illegal.unknown-rune.atem",
							"match": "[^']+"
						}
					]
				}
			]
		},
		"numlits": {
			"patterns": [
				{
					"name": "invalid.illegal.numeric.atem",
					"match": "\\b0[0-7]*[89]\\d*\\b"
				},
				{
					"name": "constant.numeric.floating-point.atem",
					"match": "(\\.\\d+([Ee][\\-\\+]\\d+)?i?)\\b|\\b\\d+\\.\\d*(([Ee][\\-\\+]\\d+)?i?\\b)?"
				},
				{
					"name": "constant.numeric.integer.atem",
					"match": "\\b((0x[0-9a-fA-F]+)|(0[0-7]+i?)|(\\d+([Ee]\\d+)?i?)|(\\d+[Ee][\\-\\+]\\d+i?))\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.atem",
					"begin": "\"",
					"end": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.atem"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.atem"
						}
					},
					"patterns": [
						{
							"include": "#string_escaped_char"
						}
					]
				},
				{
					"name": "string.quoted.raw.atem",
					"begin": "`",
					"end": "`",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.atem"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.atem"
						}
					}
				}
			]
		},
		"string_escaped_char": {
			"patterns": [
				{
					"name": "constant.character.escape.atem",
					"match": "\\\\([0-7]{3}|[abfnrtv\\\\'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})"
				},
				{
					"name": "invalid.illegal.unknown-escape.atem",
					"match": "\\\\[^0-7xuUabfnrtv\\'\"]"
				}
			]
		},
		"vars": {
			"patterns": [
				{
					"name": "variable",
					"match": "\\b_\\w*\\b"
				}
			]
		},
		"tags": {
			"patterns": [
				{
					"name": "entity.name.tag",
					"match": "\\b\\p{Upper}\\w{1}\\w*\\b"
				}
			]
		},
		"defs": {
			"patterns": [
				{
					"match": "^\\S+.*\\s+:=\\s+",
					"name": "entity.other.definition.toplevel.atem",
					"captures": {
						"0": {
							"patterns": [
								{
									"match": ",.*\\s+:=\\s+",
									"name": "entity.other.definition.toplevel.meta.atem",
									"captures": {
										"0": {
											"patterns": [
												{
													"include": "$self"
												}
											]
										}
									}
								},
								{
									"include": "#comments"
								},
								{
									"include": "#brackets"
								},
								{
									"include": "#delimiters"
								},
								{
									"include": "#keyops"
								},
								{
									"include": "#opishs"
								},
								{
									"include": "#stdlib"
								},
								{
									"include": "#runes"
								},
								{
									"include": "#numlits"
								},
								{
									"include": "#strings"
								},
								{
									"include": "#vars"
								},
								{
									"include": "#tags"
								}
							]
						}
					}
				},
				{
					"match": "^\\s+.*\\S+.*\\s+:=\\s+.*\\S+.*$",
					"captures": {
						"0": {
							"patterns": [
								{
									"match": "(,.*?\\s+:=\\s+)|([^,\\s]+[^,]*?\\s+:=\\s+)",
									"captures": {
										"0": {
											"patterns": [
												{
													"match": "[^,\\s]+.*\\s+:=\\s+",
													"name": "entity.other.definition.local.atem",
													"captures": {
														"0": {
															"patterns": [
																{
																	"include": "$self"
																}
															]
														}
													}
												},
												{
													"include": "$self"
												}
											]
										}
									}
								},
								{
									"include": "#comments"
								},
								{
									"include": "#brackets"
								},
								{
									"include": "#delimiters"
								},
								{
									"include": "#keyops"
								},
								{
									"include": "#opishs"
								},
								{
									"include": "#stdlib"
								},
								{
									"include": "#runes"
								},
								{
									"include": "#numlits"
								},
								{
									"include": "#strings"
								},
								{
									"include": "#vars"
								},
								{
									"include": "#tags"
								}
							]
						}
					}
				}
			]
		}
	}
}
